// Author: Anuj R. Sharma
//         IIT Kanpur,
//         Email: sharma.anuj1991@gmail.com
//
//  This is the solution for the HackerRank problem:
//  https://www.hackerrank.com/challenges/acm-icpc-team
//


#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int n, m;
bool subject_list[501][501];

int or_count(std::size_t num1, std::size_t num2)
{
    int count = 0;
    for(int i = 0; i < m; i++)
    {
        count += subject_list[num1][i] || subject_list[num2][i];
    }
    return count;
}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    int max_value = 0, team = 0;
    cin >> n >> m; //Getting two numbers
    getchar(); // To clear buffer for \n after m

    // Scanning user information
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            subject_list[i][j] = getchar() - '0'; //Convert char to int
        }
        getchar(); // To avoid scanning \n
    }

    int count = 0;
    //Computing OR
    for(int i = 0; i < n; i++){
        for(int j = i + 1; j < n; j++){
            count = or_count(i, j);
            if(count > max_value)
            {
                max_value = count;
                team = 1;
            }
            else if(count == max_value)
            {
                team++;
            }
        }
    }
    
    cout << max_value << "\n" << team;
    return 0;
}
